# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers
         environment:
           PGHOST: 127.0.0.1
           PGUSER: root
           DBNAME: circle_test
           DATABASE_URL: postgresql://root@localhost:5432/circle_test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
            - ./node_modules
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      # Database setup
      - run: bundle exec rake db:create || true
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            ./cc-test-reporter before-build
            bundle exec rspec --format documentation \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              -- $(echo "${TEST_FILES}" | sed -e 's/\n/\\n/' -e 's/ /\ /')
            ./cc-test-reporter after-build --exit-code $EXIT_CODE

      - add_ssh_keys:
          fingerprints:
            - "2f:3c:f1:ab:1d:d2:38:d4:04:3b:f9:31:64:f4:41:63"

      - deploy:
          name: Maybe Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            if [ -z "${BUNDLE_UPDATE}" ]; then
              ./.circleci/do-exclusively --branch master ./.circleci/deploy-circleci.sh
            else
              gem install -N bundler circleci-bundle-update-pr
              circleci-bundle-update-pr CircleCI circleci@example.com
            fi

      # collect reports
      # - store_test_results:
      #     path: /tmp/test-results
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: test-results
